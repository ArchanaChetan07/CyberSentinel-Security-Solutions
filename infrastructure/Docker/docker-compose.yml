version: '3.9'

services:
  app:
    build: .
    container_name: cyber_app
    depends_on:
      - kafka
      - zookeeper
      - mlflow
    ports:
      - "8000:8000"
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      MLFLOW_TRACKING_URI: http://mlflow:5000
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - .:/app
    command: ["python", "scripts/Data Preparation Balancing and Test Train Validation Splits.ipynb"]

  kafka:
    image: bitnami/kafka:latest
    container_name: cyber_kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: cyber_zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes

  mlflow:
    image: ghcr.io/mlflow/mlflow
    container_name: cyber_mlflow
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlflow/mlruns
    environment:
      BACKEND_STORE_URI: sqlite:///mlflow.db
      ARTIFACT_ROOT: /mlflow/mlruns
    command: mlflow server --host 0.0.0.0 --backend-store-uri sqlite:///mlflow.db --default-artifact-root /mlflow/mlruns
